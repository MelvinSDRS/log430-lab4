events {
    worker_connections 1024;
}

http {
    upstream api_servers {
        server api-rest-1:8000 weight=3;
        server api-rest-2:8000 weight=1;
    }

    server {
        listen 80;
        
        add_header X-Load-Balancer "nginx-weighted-round-robin" always;
        add_header X-Instances-Count "2" always;
        add_header X-Backend-Server $upstream_addr always;

        location /api/health {
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts optimis√©s pour haute charge
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        location /metrics {
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Health check endpoint pour NGINX
        location /nginx_status {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
} 